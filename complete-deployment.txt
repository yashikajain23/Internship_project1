#Convert the file extension to .tf before using terraform commands
#Version: 1.2
terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=2.46.0"
    }
  }
}

# Configure the Microsoft Azure Provider
provider "azurerm" {
  features {}
}

# Create resource group
resource "azurerm_resource_group" "ResourceGroup" {
  name     = "3TierArchitecture-r"
  location = "east us 2"
}

# Create Public IP Access
resource "azurerm_public_ip" "public-ip-address-1" {
  name                = "web-tier-public-ip"
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  location            = azurerm_resource_group.ResourceGroup.location
  allocation_method   = "Dynamic"
  ip_version = "IPv4"
  domain_name_label = "our-internship-project-webpage-9472"
}

# Create Network Security Group
resource "azurerm_network_security_group" "web-tier-nsg"{
  name = "PublicInboundTraffic"
  location = azurerm_resource_group.ResourceGroup.location
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  security_rule{
      name = "web-tier-public-access"
      description = "Public Access for Web Tier"
      priority = 100
      direction = "Inbound"
      access = "Allow"
      protocol ="tcp"
      source_port_range = "*"
      destination_port_range = "*"
      source_address_prefix ="*"
      destination_address_prefix = "*"
  }

  security_rule{
      name = "web-tier-public-access-outbound"
      description = "Public Access for Web Tier"
      priority = 100
      direction = "Outbound"
      access = "Allow"
      protocol ="tcp"
      source_port_range = "*"
      destination_port_range = "*"
      source_address_prefix ="*"
      destination_address_prefix = "*"
  }

  security_rule{
      name = "web-app-inbound"
      description = "Private access between Web and App"
      priority = 101
      direction = "Inbound"
      access = "Allow"
      protocol ="tcp"
      source_port_range = "*"
      destination_port_range = "*"
      source_address_prefix ="10.1.2.0/24"
      destination_address_prefix = "10.1.1.0/24"
  }
  security_rule{
  name = "web-app-connection"
  description = "Public Access for Web Tier"
  priority = 101
  direction = "Outbound"
  access = "Allow"
  protocol ="tcp"
  source_port_range = "*"
  destination_port_range = "*"
  source_address_prefix ="10.1.1.0/24"
  destination_address_prefix = "10.1.2.0/24"
  }
}
resource "azurerm_network_security_group" "app-tier-nsg"{
  name = "PrivateInboundTierTwo"
  location = azurerm_resource_group.ResourceGroup.location
  resource_group_name = azurerm_resource_group.ResourceGroup.name

  security_rule{
    name = "app-tier-private-access"
    description = "Private Access for App Tier"
    priority = 100
    direction = "Inbound"
    access = "Allow"
    protocol ="tcp"
    source_port_range = "*"
    destination_port_range = "*"
    source_address_prefix ="10.1.1.0/24"
    destination_address_prefix = "10.1.2.0/24"
  }

  security_rule{
    name = "data-app-connection"
    description = "Private Access for App Tier"
    priority = 101
    direction = "Inbound"
    access = "Allow"
    protocol ="tcp"
    source_port_range = "*"
    destination_port_range = "*"
    source_address_prefix ="10.1.3.0/24"
    destination_address_prefix = "10.1.2.0/24"
  }

  security_rule{
    name = "app-data-connection"
    description = "Private Access for App Tier"
    priority = 100
    direction = "Outbound"
    access = "Allow"
    protocol ="tcp"
    source_port_range = "*"
    destination_port_range = "*"
    source_address_prefix ="10.1.2.0/24"
    destination_address_prefix = "10.1.3.0/24"
  }

  security_rule{
    name = "app-web-connection"
    description = "Private Access for App Tier"
    priority = 101
    direction = "Outbound"
    access = "Allow"
    protocol ="tcp"
    source_port_range = "*"
    destination_port_range = "*"
    source_address_prefix ="10.1.2.0/24"
    destination_address_prefix = "10.1.1.0/24"
  }
}
resource "azurerm_network_security_group" "data-tier-nsg"{
  name = "PrivateInboundTierThree"
  location = azurerm_resource_group.ResourceGroup.location
  resource_group_name = azurerm_resource_group.ResourceGroup.name

  security_rule{
    name = "data-tier-private-access"
    description = "Private Access for App Tier"
    priority = 100
    direction = "Inbound"
    access = "Allow"
    protocol ="tcp"
    source_port_range = "*"
    destination_port_range = "*"
    source_address_prefix ="10.1.2.0/24"
    destination_address_prefix = "10.1.3.0/24"
  }
  security_rule{
    name = "data-app-access"
    description = "Private Access for App Tier"
    priority = 100
    direction = "Outbound"
    access = "Allow"
    protocol ="tcp"
    source_port_range = "*"
    destination_port_range = "*"
    source_address_prefix ="10.1.2.0/24"
    destination_address_prefix = "10.1.1.0/24"
  }
}

# Create Virtual Network
resource "azurerm_virtual_network" "VirtualNetwork" {
  name                = "VNet-1"
  location            = azurerm_resource_group.ResourceGroup.location
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  address_space       = ["10.1.0.0/16"]
  dns_servers         = ["10.1.0.4", "10.1.0.5"]

}

#Create Subnet for Virtual Network
resource "azurerm_subnet" "web-tier-subnet" {
    name           = "web-tier-subnet-1"
    address_prefixes = ["10.1.1.0/24"]
    resource_group_name  = azurerm_resource_group.ResourceGroup.name
    virtual_network_name = azurerm_virtual_network.VirtualNetwork.name
}
resource "azurerm_subnet" "app-tier-subnet" {
    name           = "app-tier-subnet-1"
    address_prefixes = ["10.1.2.0/24"]
    resource_group_name  = azurerm_resource_group.ResourceGroup.name
    virtual_network_name = azurerm_virtual_network.VirtualNetwork.name
}
resource "azurerm_subnet" "data-tier-subnet" {
    name           = "data-tier-subnet-1"
    address_prefixes = ["10.1.3.0/24"]
    resource_group_name  = azurerm_resource_group.ResourceGroup.name
    virtual_network_name = azurerm_virtual_network.VirtualNetwork.name
    service_endpoints    = ["Microsoft.Sql"]
}

#Subnet and Network Security Group Association
resource "azurerm_subnet_network_security_group_association" "web-subnet-nsg-association" {
  subnet_id                 = azurerm_subnet.web-tier-subnet.id
  network_security_group_id = azurerm_network_security_group.web-tier-nsg.id
}
resource "azurerm_subnet_network_security_group_association" "app-subnet-nsg-association" {
  subnet_id                 = azurerm_subnet.app-tier-subnet.id
  network_security_group_id = azurerm_network_security_group.app-tier-nsg.id
}
resource "azurerm_subnet_network_security_group_association" "data-subnet-nsg-association" {
  subnet_id                 = azurerm_subnet.data-tier-subnet.id
  network_security_group_id = azurerm_network_security_group.data-tier-nsg.id
}

#Create Network Interface Card
resource "azurerm_network_interface" "Network_Interface-Web-1" {
  name                = "nic-web-public-1"
  location            = azurerm_resource_group.ResourceGroup.location
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  #virtual_machine_id = azurerm_windows_virtual_machine.tier1-vm.id
  ip_configuration {
    name                          = "nic-internal-ip-config-1"
    public_ip_address_id = azurerm_public_ip.public-ip-address-1.id
    subnet_id                     = azurerm_subnet.web-tier-subnet.id
    private_ip_address_allocation = "Dynamic"
    }
}
resource "azurerm_network_interface" "Network_Interface-Web-2" {
  name                = "nic-web-1"
  location            = azurerm_resource_group.ResourceGroup.location
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  #virtual_machine_id = azurerm_windows_virtual_machine.tier1-vm.id
  ip_configuration {
    name                          = "nic-internal-ip-config-2"
    subnet_id                     = azurerm_subnet.web-tier-subnet.id
    private_ip_address_allocation = "Dynamic"
  }
}
resource "azurerm_network_interface" "Network_Interface-App-1" {
  name                = "nic-app-1"
  location            = azurerm_resource_group.ResourceGroup.location
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  #virtual_machine_id = azurerm_virtual_machine.tier2-vm.id
  ip_configuration {
    name                          = "nic-internal-ip-config-3"
    subnet_id                     = azurerm_subnet.app-tier-subnet.id
    private_ip_address_allocation = "Dynamic"
  }
}
resource "azurerm_network_interface" "Network_Interface-Data-1" {
  name                = "nic-data-1"
  location            = azurerm_resource_group.ResourceGroup.location
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  #connected to database server in tier 3
  ip_configuration {
    name                          = "nic-internal-ip-config-4"
    subnet_id                     = azurerm_subnet.data-tier-subnet.id
    private_ip_address_allocation = "Dynamic"
  }
}

#Create Virtual Machine for Tier 1
resource "azurerm_windows_virtual_machine" "tier1-vm" {
  name                = "web-vm-1"
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  location            = azurerm_resource_group.ResourceGroup.location
  size                = "Standard_F2"
  admin_username      = "adminuser"
  admin_password      = "Pa$$word@Windows_VM@45660"
  network_interface_ids = [
    azurerm_network_interface.Network_Interface-Web-1.id, azurerm_network_interface.Network_Interface-Web-2.id
  ]

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2019-Datacenter"
    version   = "latest"
  }
}

#Create Virtual Machine for Tier 2 OR create a Cognitive AI service
resource "azurerm_virtual_machine" "tier2-vm" {
  count = "1"
  name  = "app-0${count.index + 1}"

  location = "${azurerm_resource_group.ResourceGroup.location}"

  resource_group_name              = "${azurerm_resource_group.ResourceGroup.name}"
  network_interface_ids            = [azurerm_network_interface.Network_Interface-App-1.id,]
  delete_os_disk_on_termination    = "true"
  delete_data_disks_on_termination = "true"
  vm_size                          = "Standard_F2"
  
  storage_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-focal"
    sku       = "20_04-lts"
    version   = "latest"
  }

  # Assign vhd blob storage and create a profile

  storage_os_disk {
    name          = "osdisk${count.index}"
    caching       = "ReadWrite"
    create_option = "FromImage"
    managed_disk_type = "StandardSSD_LRS"
  }
  storage_data_disk {
    name          = "datadisk${count.index}"
    disk_size_gb  = "30"
    create_option = "Empty"
    lun           = 0
  }
  os_profile {
    computer_name  = "webvm-${count.index + 1}"
    admin_username = "server_admin_username"
    admin_password = "Password@AppServer9360"
    
  }
  os_profile_linux_config {
    disable_password_authentication  = "false"
  }
}

#Create Database in Tier 3
resource "azurerm_sql_server" "db-server" {
  name                         = "server-data-tier-1-8129"
  resource_group_name          = azurerm_resource_group.ResourceGroup.name
  location                     = azurerm_resource_group.ResourceGroup.location
  version                      = "12.0"
  administrator_login          = "db-server-admin"
  administrator_login_password = "4-v3ry-53cr37-p455w0rd-23525"

}
resource "azurerm_sql_database" "db-1" {
  name                = "tier3database"
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  location            = azurerm_resource_group.ResourceGroup.location
  server_name         = azurerm_sql_server.db-server.name

}
resource "azurerm_sql_virtual_network_rule" "sqlvnetrule1" {
  name                = "sql-vnet-rule-1"
  resource_group_name = azurerm_resource_group.ResourceGroup.name
  server_name         = azurerm_sql_server.db-server.name
  subnet_id           = azurerm_subnet.data-tier-subnet.id
}
